// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.openai.implementation;

import com.azure.core.http.HttpPipeline;
import com.azure.core.http.HttpPipelineBuilder;
import com.azure.core.http.policy.RetryPolicy;
import com.azure.core.http.policy.UserAgentPolicy;
import com.azure.core.util.serializer.JacksonAdapter;
import com.azure.core.util.serializer.SerializerAdapter;

/**
 * Initializes a new instance of the OpenAIClient type.
 */
public final class OpenAIClientImpl {
    /**
     * The HTTP pipeline to send requests through.
     */
    private final HttpPipeline httpPipeline;

    /**
     * Gets The HTTP pipeline to send requests through.
     * 
     * @return the httpPipeline value.
     */
    public HttpPipeline getHttpPipeline() {
        return this.httpPipeline;
    }

    /**
     * The serializer to serialize an object into a string.
     */
    private final SerializerAdapter serializerAdapter;

    /**
     * Gets The serializer to serialize an object into a string.
     * 
     * @return the serializerAdapter value.
     */
    public SerializerAdapter getSerializerAdapter() {
        return this.serializerAdapter;
    }

    /**
     * The AudiosImpl object to access its operations.
     */
    private final AudiosImpl audios;

    /**
     * Gets the AudiosImpl object to access its operations.
     * 
     * @return the AudiosImpl object.
     */
    public AudiosImpl getAudios() {
        return this.audios;
    }

    /**
     * The AssistantsImpl object to access its operations.
     */
    private final AssistantsImpl assistants;

    /**
     * Gets the AssistantsImpl object to access its operations.
     * 
     * @return the AssistantsImpl object.
     */
    public AssistantsImpl getAssistants() {
        return this.assistants;
    }

    /**
     * The BatchesImpl object to access its operations.
     */
    private final BatchesImpl batches;

    /**
     * Gets the BatchesImpl object to access its operations.
     * 
     * @return the BatchesImpl object.
     */
    public BatchesImpl getBatches() {
        return this.batches;
    }

    /**
     * The ChatsImpl object to access its operations.
     */
    private final ChatsImpl chats;

    /**
     * Gets the ChatsImpl object to access its operations.
     * 
     * @return the ChatsImpl object.
     */
    public ChatsImpl getChats() {
        return this.chats;
    }

    /**
     * The CompletionsImpl object to access its operations.
     */
    private final CompletionsImpl completions;

    /**
     * Gets the CompletionsImpl object to access its operations.
     * 
     * @return the CompletionsImpl object.
     */
    public CompletionsImpl getCompletions() {
        return this.completions;
    }

    /**
     * The EmbeddingsImpl object to access its operations.
     */
    private final EmbeddingsImpl embeddings;

    /**
     * Gets the EmbeddingsImpl object to access its operations.
     * 
     * @return the EmbeddingsImpl object.
     */
    public EmbeddingsImpl getEmbeddings() {
        return this.embeddings;
    }

    /**
     * The FilesImpl object to access its operations.
     */
    private final FilesImpl files;

    /**
     * Gets the FilesImpl object to access its operations.
     * 
     * @return the FilesImpl object.
     */
    public FilesImpl getFiles() {
        return this.files;
    }

    /**
     * The FineTuningsImpl object to access its operations.
     */
    private final FineTuningsImpl fineTunings;

    /**
     * Gets the FineTuningsImpl object to access its operations.
     * 
     * @return the FineTuningsImpl object.
     */
    public FineTuningsImpl getFineTunings() {
        return this.fineTunings;
    }

    /**
     * The ImagesImpl object to access its operations.
     */
    private final ImagesImpl images;

    /**
     * Gets the ImagesImpl object to access its operations.
     * 
     * @return the ImagesImpl object.
     */
    public ImagesImpl getImages() {
        return this.images;
    }

    /**
     * The MessagesImpl object to access its operations.
     */
    private final MessagesImpl messages;

    /**
     * Gets the MessagesImpl object to access its operations.
     * 
     * @return the MessagesImpl object.
     */
    public MessagesImpl getMessages() {
        return this.messages;
    }

    /**
     * The ModelsImpl object to access its operations.
     */
    private final ModelsImpl models;

    /**
     * Gets the ModelsImpl object to access its operations.
     * 
     * @return the ModelsImpl object.
     */
    public ModelsImpl getModels() {
        return this.models;
    }

    /**
     * The ModerationsImpl object to access its operations.
     */
    private final ModerationsImpl moderations;

    /**
     * Gets the ModerationsImpl object to access its operations.
     * 
     * @return the ModerationsImpl object.
     */
    public ModerationsImpl getModerations() {
        return this.moderations;
    }

    /**
     * The RealtimesImpl object to access its operations.
     */
    private final RealtimesImpl realtimes;

    /**
     * Gets the RealtimesImpl object to access its operations.
     * 
     * @return the RealtimesImpl object.
     */
    public RealtimesImpl getRealtimes() {
        return this.realtimes;
    }

    /**
     * The ThreadsImpl object to access its operations.
     */
    private final ThreadsImpl threads;

    /**
     * Gets the ThreadsImpl object to access its operations.
     * 
     * @return the ThreadsImpl object.
     */
    public ThreadsImpl getThreads() {
        return this.threads;
    }

    /**
     * The RunsImpl object to access its operations.
     */
    private final RunsImpl runs;

    /**
     * Gets the RunsImpl object to access its operations.
     * 
     * @return the RunsImpl object.
     */
    public RunsImpl getRuns() {
        return this.runs;
    }

    /**
     * The VectorStoresImpl object to access its operations.
     */
    private final VectorStoresImpl vectorStores;

    /**
     * Gets the VectorStoresImpl object to access its operations.
     * 
     * @return the VectorStoresImpl object.
     */
    public VectorStoresImpl getVectorStores() {
        return this.vectorStores;
    }

    /**
     * The UploadsImpl object to access its operations.
     */
    private final UploadsImpl uploads;

    /**
     * Gets the UploadsImpl object to access its operations.
     * 
     * @return the UploadsImpl object.
     */
    public UploadsImpl getUploads() {
        return this.uploads;
    }

    /**
     * Initializes an instance of OpenAIClient client.
     */
    public OpenAIClientImpl() {
        this(new HttpPipelineBuilder().policies(new UserAgentPolicy(), new RetryPolicy()).build(),
            JacksonAdapter.createDefaultSerializerAdapter());
    }

    /**
     * Initializes an instance of OpenAIClient client.
     * 
     * @param httpPipeline The HTTP pipeline to send requests through.
     */
    public OpenAIClientImpl(HttpPipeline httpPipeline) {
        this(httpPipeline, JacksonAdapter.createDefaultSerializerAdapter());
    }

    /**
     * Initializes an instance of OpenAIClient client.
     * 
     * @param httpPipeline The HTTP pipeline to send requests through.
     * @param serializerAdapter The serializer to serialize an object into a string.
     */
    public OpenAIClientImpl(HttpPipeline httpPipeline, SerializerAdapter serializerAdapter) {
        this.httpPipeline = httpPipeline;
        this.serializerAdapter = serializerAdapter;
        this.audios = new AudiosImpl(this);
        this.assistants = new AssistantsImpl(this);
        this.batches = new BatchesImpl(this);
        this.chats = new ChatsImpl(this);
        this.completions = new CompletionsImpl(this);
        this.embeddings = new EmbeddingsImpl(this);
        this.files = new FilesImpl(this);
        this.fineTunings = new FineTuningsImpl(this);
        this.images = new ImagesImpl(this);
        this.messages = new MessagesImpl(this);
        this.models = new ModelsImpl(this);
        this.moderations = new ModerationsImpl(this);
        this.realtimes = new RealtimesImpl(this);
        this.threads = new ThreadsImpl(this);
        this.runs = new RunsImpl(this);
        this.vectorStores = new VectorStoresImpl(this);
        this.uploads = new UploadsImpl(this);
    }
}
