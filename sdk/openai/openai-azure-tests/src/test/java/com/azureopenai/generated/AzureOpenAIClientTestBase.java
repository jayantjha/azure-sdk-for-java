// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package com.azureopenai.generated;

// The Java test files under 'generated' package are generated for your reference.
// If you wish to modify these files, please copy them out of the 'generated' package, and modify there.
// See https://aka.ms/azsdk/dpg/java/tests for guide on adding a test.

import com.azure.core.http.HttpClient;
import com.azure.core.http.policy.HttpLogDetailLevel;
import com.azure.core.http.policy.HttpLogOptions;
import com.azure.core.test.TestMode;
import com.azure.core.test.TestProxyTestBase;
import com.azure.core.test.utils.MockTokenCredential;
import com.azure.core.util.Configuration;
import com.azure.identity.DefaultAzureCredentialBuilder;
import com.azureopenai.AzureChatClient;
import com.azureopenai.AzureImagesClient;
import com.azureopenai.AzureMessagesClient;
import com.azureopenai.AzureOpenAIClientBuilder;

class AzureOpenAIClientTestBase extends TestProxyTestBase {
    protected AzureChatClient azureChatClient;

    protected AzureImagesClient azureImagesClient;

    protected AzureMessagesClient azureMessagesClient;

    @Override
    protected void beforeTest() {
        AzureOpenAIClientBuilder azureChatClientbuilder = new AzureOpenAIClientBuilder()
            .endpoint(Configuration.getGlobalConfiguration().get("ENDPOINT", "endpoint"))
            .httpClient(HttpClient.createDefault())
            .httpLogOptions(new HttpLogOptions().setLogLevel(HttpLogDetailLevel.BASIC));
        if (getTestMode() == TestMode.PLAYBACK) {
            azureChatClientbuilder.httpClient(interceptorManager.getPlaybackClient())
                .credential(new MockTokenCredential());
        } else if (getTestMode() == TestMode.RECORD) {
            azureChatClientbuilder.addPolicy(interceptorManager.getRecordPolicy())
                .credential(new DefaultAzureCredentialBuilder().build());
        } else if (getTestMode() == TestMode.LIVE) {
            azureChatClientbuilder.credential(new DefaultAzureCredentialBuilder().build());
        }
        azureChatClient = azureChatClientbuilder.buildAzureChatClient();

        AzureOpenAIClientBuilder azureImagesClientbuilder = new AzureOpenAIClientBuilder()
            .endpoint(Configuration.getGlobalConfiguration().get("ENDPOINT", "endpoint"))
            .httpClient(HttpClient.createDefault())
            .httpLogOptions(new HttpLogOptions().setLogLevel(HttpLogDetailLevel.BASIC));
        if (getTestMode() == TestMode.PLAYBACK) {
            azureImagesClientbuilder.httpClient(interceptorManager.getPlaybackClient())
                .credential(new MockTokenCredential());
        } else if (getTestMode() == TestMode.RECORD) {
            azureImagesClientbuilder.addPolicy(interceptorManager.getRecordPolicy())
                .credential(new DefaultAzureCredentialBuilder().build());
        } else if (getTestMode() == TestMode.LIVE) {
            azureImagesClientbuilder.credential(new DefaultAzureCredentialBuilder().build());
        }
        azureImagesClient = azureImagesClientbuilder.buildAzureImagesClient();

        AzureOpenAIClientBuilder azureMessagesClientbuilder = new AzureOpenAIClientBuilder()
            .endpoint(Configuration.getGlobalConfiguration().get("ENDPOINT", "endpoint"))
            .httpClient(HttpClient.createDefault())
            .httpLogOptions(new HttpLogOptions().setLogLevel(HttpLogDetailLevel.BASIC));
        if (getTestMode() == TestMode.PLAYBACK) {
            azureMessagesClientbuilder.httpClient(interceptorManager.getPlaybackClient())
                .credential(new MockTokenCredential());
        } else if (getTestMode() == TestMode.RECORD) {
            azureMessagesClientbuilder.addPolicy(interceptorManager.getRecordPolicy())
                .credential(new DefaultAzureCredentialBuilder().build());
        } else if (getTestMode() == TestMode.LIVE) {
            azureMessagesClientbuilder.credential(new DefaultAzureCredentialBuilder().build());
        }
        azureMessagesClient = azureMessagesClientbuilder.buildAzureMessagesClient();

    }
}
